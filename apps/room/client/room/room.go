// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: room.proto

package room

import (
	"context"

	"fish-game/apps/room/room"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetPlayersReply   = room.GetPlayersReply
	GetPlayersRequest = room.GetPlayersRequest
	JoinRoomReply     = room.JoinRoomReply
	JoinRoomRequest   = room.JoinRoomRequest
	LeaveRoomReply    = room.LeaveRoomReply
	LeaveRoomRequest  = room.LeaveRoomRequest

	Room interface {
		JoinRoom(ctx context.Context, in *JoinRoomRequest, opts ...grpc.CallOption) (*JoinRoomReply, error)
		LeaveRoom(ctx context.Context, in *LeaveRoomRequest, opts ...grpc.CallOption) (*LeaveRoomReply, error)
		GetPlayers(ctx context.Context, in *GetPlayersRequest, opts ...grpc.CallOption) (*GetPlayersReply, error)
	}

	defaultRoom struct {
		cli zrpc.Client
	}
)

func NewRoom(cli zrpc.Client) Room {
	return &defaultRoom{
		cli: cli,
	}
}

func (m *defaultRoom) JoinRoom(ctx context.Context, in *JoinRoomRequest, opts ...grpc.CallOption) (*JoinRoomReply, error) {
	client := room.NewRoomClient(m.cli.Conn())
	return client.JoinRoom(ctx, in, opts...)
}

func (m *defaultRoom) LeaveRoom(ctx context.Context, in *LeaveRoomRequest, opts ...grpc.CallOption) (*LeaveRoomReply, error) {
	client := room.NewRoomClient(m.cli.Conn())
	return client.LeaveRoom(ctx, in, opts...)
}

func (m *defaultRoom) GetPlayers(ctx context.Context, in *GetPlayersRequest, opts ...grpc.CallOption) (*GetPlayersReply, error) {
	client := room.NewRoomClient(m.cli.Conn())
	return client.GetPlayers(ctx, in, opts...)
}
