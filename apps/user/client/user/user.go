// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: user.proto

package user

import (
	"context"

	"fish-game/apps/user/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddGoldRequest   = user.AddGoldRequest
	AddGoldResponse  = user.AddGoldResponse
	LoginRequest     = user.LoginRequest
	LoginResponse    = user.LoginResponse
	ProfileRequest   = user.ProfileRequest
	ProfileResponse  = user.ProfileResponse
	RegisterRequest  = user.RegisterRequest
	RegisterResponse = user.RegisterResponse

	User interface {
		Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
		Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
		GetProfile(ctx context.Context, in *ProfileRequest, opts ...grpc.CallOption) (*ProfileResponse, error)
		AddGold(ctx context.Context, in *AddGoldRequest, opts ...grpc.CallOption) (*AddGoldResponse, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultUser) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultUser) GetProfile(ctx context.Context, in *ProfileRequest, opts ...grpc.CallOption) (*ProfileResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetProfile(ctx, in, opts...)
}

func (m *defaultUser) AddGold(ctx context.Context, in *AddGoldRequest, opts ...grpc.CallOption) (*AddGoldResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.AddGold(ctx, in, opts...)
}
